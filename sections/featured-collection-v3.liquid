<link rel="stylesheet" href="{{'section-featured-collection-v3.css' | asset_url}}" media="print" onload="this.media='all'">

{%- liquid
  assign bg_class = ''
  assign limit = section.settings.limit
  assign dots  = section.settings.dots
  assign loop  = section.settings.loop
  assign controls = section.settings.controls
  assign controls_position = section.settings.controls_position
  assign autoplay = section.settings.autoplay
  assign collection = collections[section.settings.collection]
  assign sectionID  = '#section-' | append: section.id
  assign items_resp = section.settings.items_resp
  assign controls_id = '#controls-' | append: section.id
  assign autoplay_timeout = section.settings.autoplay_timeout
  assign heading_style_block = section.blocks | where: 'type' , 'heading-style' | first
  assign slider_id = '#slider-' | append: section.id
  assign items_spacing_slider = '4px'

  assign layout = section.settings.layout
  if layout == 'boxed'
    assign layout_class = 'container'
  else
    assign layout_class = 'container-fluid'
  endif
-%}

{%- capture gridClass -%}{%- render 'set-item-per-row', value: items_resp -%}{%- endcapture -%}

<div class="section-featured-collection-v3" id="section-{{section.id}}" data-section-id="{{section.id}}" data-section-type="featured-collection">
  <div class="{% if template == 'index' or template contains 'page' %}{{ layout_class }}{% endif %}">
    <div class="section-wrapper row">

      {%- if section.settings.heading != blank -%}
        {%- capture heading_css -%}
          {%- liquid
            assign margin    = heading_style_block.settings.section_heading_margin
            assign heading_color = heading_style_block.settings.section_heading_color
          -%}
          {%- render 'css-responsive' classID: sectionID, nextClassID: ' .section-header-text',
            value_1: margin,    property_1: 'margin'
            value_2: heading_color,     property_2: 'color'
            -%}
        {%- endcapture -%}

        <div class="section-header col-lg-6 col-12">
          <div class="section-header-text">{{section.settings.heading}}</div>  
        </div>
      {%- endif -%}

      <div class="section-body col-lg-6 col-12">
        <div class="block-slider-component">
          <slider-component>
            <div class="slider-container js-slider-container">
              <div class="slider-wrapper">
                <div class="slider-list" id="slider-{{section.id}}">
                  {%- for product in collection.products limit: limit -%}
                    <div class="slider-item">
                      {%- render 'product-item' product: product, collection: collection-%}
                    </div>
                  {%- endfor -%}
                </div>

                {%- render 'set-tns-config'
                  loop: loop,
                  dots: dots,
                  padding: items_spacing_slider,
                  classID: sectionID,
                  controls: controls,
                  autoplay: autoplay,
                  slider_id  : slider_id,
                  total_item : limit,
                  items_resp : items_resp,
                  controls_id: controls_id,
                  customControls  : true,
                  autoplay_timeout: autoplay_timeout
                -%}
              </div>
            </div>
          </slider-component>
        </div> 
      </div>

    </div>
  </div>
</div>

<script>
  window.theme = window.theme || {};
  if(!!window.theme.sectionRegister){
    !window.theme.sectionRegister.includes("featured-collection") && (window.theme.sectionRegister = [...window.theme.sectionRegister, "featured-collection"]);
  }else{
    window.theme.sectionRegister = ["featured-collection"];
  }
</script>

<script>
  window.theme = window.theme || {};
  if(!!window.theme.customElementsList){
    !window.theme.customElementsList.includes("slider-component") && (window.theme.customElementsList = [...window.theme.customElementsList, "slider-component"]);
  }else{
    window.theme.customElementsList = ["slider-component"];
  }
</script>

{%- capture section_css -%}
  {{-heading_css-}}
  {%- render 'snippet-theme' type: 'section-style', preClassID: sectionID, classID: bg_class, config: section.settings -%}
{%- endcapture -%}
{%- style -%}{{section_css | strip | strip_newlines | remove: '  ' }}{%- endstyle -%}
{%- schema -%}
{
  "name": "t:sections.featured-collection-v3.name",
  "tag": "section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "header",
      "content": "t:sections.common.general"
    },
    {
      "type": "select",
      "id": "layout",
      "label": "t:sections.common.layout_mode",
      "default": "boxed",
      "options": [
        {
          "value": "boxed",
          "label": "Boxed"
        },
        {
          "value": "full",
          "label": "Wide"
        }
      ]
    },
    {
      "type": "color",
      "id": "bg_color",
      "label": "t:sections.common.background_color"
    },
    {
      "type": "text",
      "id": "margin",
      "label": "t:sections.common.section_margin",
      "info": "t:sections.common.order_info"
    },
    {
      "type": "text",
      "id": "padding",
      "label": "t:sections.common.section_padding",
      "info": "t:sections.common.order_info"
    },
    {
      "type": "richtext",
      "id": "heading",
      "label": "t:sections.common.heading"
    },
    {
      "type": "collection",
      "id": "collection",
      "label": "t:sections.common.collection"
    },
    {
      "type": "text",
      "id": "items_resp",
      "label": "t:sections.common.items_per_row",
      "default": "3,2"
    },
    {
      "type": "checkbox",
      "id": "items_spacing",
      "label": "t:sections.common.items_spacing",
      "default": true
    },
    {
      "type": "range",
      "id": "limit",
      "label": "t:sections.common.limit",
      "step": 1,
      "min": 1,
      "max": 8,
      "default": 6
    },
    {
      "type": "header",
      "content": "t:sections.common.slider_settings"
    },
    {
      "type": "checkbox",
      "id": "loop",
      "label": "t:sections.common.loop",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "controls",
      "label": "t:sections.common.controls",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "dots",
      "label": "t:sections.common.dots",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "autoplay",
      "label": "t:sections.common.autoplay",
      "default": false
    },
    {
      "type": "range",
      "id": "autoplay_timeout",
      "label": "t:sections.common.autoplay_timeout",
      "step": 0.1,
      "min": 2,
      "max": 10,
      "unit": "s",
      "default": 4
    }
  ],
  "blocks": [
    {
      "type": "heading-style",
      "limit": 1,
      "name": "t:sections.common.heading_style",
      "settings": [
        {
          "type": "color",
          "id": "section_heading_color",
          "label": "t:sections.common.text_color"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "t:sections.featured-collection-v3.name"
    }
  ]
}
{%- endschema -%}